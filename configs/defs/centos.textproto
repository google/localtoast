benchmark_configs: {
  id: "shm-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:centos:centos:7.%02" version: "4.0.0" benchmark_document: "CIS Centos Linux 7.x" }
    title: "Ensure /dev/shm is configured"
    description:
      "/dev/shm is a traditional shared memory concept. One program will create a memory "
      "portion, which other processes (if permitted) can access. Mounting tmpts at /dev/shm is "
      "handled automatically by systemd."
    rationale:
      "Any user can upload and execute files inside the /dev/shm similar to the /tmp partition. "
      "Configuring /dev/shm allows an administrator to set the noexec option on the mount, "
      "making /dev/shm useless for an attacker to install executable code. It would also prevent an "
      "attacker from establishing a hardlink to a system setuid program and wait for it to be "
      "updated. Once the program was updated, the hardlink would be broken and the attacker "
      "would have his own copy of the program. If the program happened to have a security "
      "vulnerability, the attacker could continue to exploit the known flaw. "
    remediation:
      "Edit /etc/stab and add or edit the following line:\n"
      "tmpfs /dev/shm tmpfs defaults,noexec,nodev,nosuid,seclabel 0 0\n"
      "Run the following command to remount /dev/shm:\n"
      "# mount -o remount,noexec,nodev,nosuid /dev/shm"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{"
      " instance_scanning: {"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \".* /dev/shm .*\""
      "          expected_regex: \".* /dev/shm .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/fstab\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \".* /dev/shm .*\""
      "          expected_regex: \".* /dev/shm .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      " }"
      " image_scanning: {"
      "  check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{single_file:{path:\"/etc/fstab\"}}"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \".* /dev/shm .*\""
      "          expected_regex: \".* /dev/shm .*\""
      "        }"
      "      }"
      "    }"
      "  }"
      " }"
      "}"
  }
}
benchmark_configs: {
  id: "removable-media-partitions-noexec"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:centos:centos:7.%02" version: "4.0.0" benchmark_document: "CIS Centos Linux 7.x" }
    title: "Ensure removable media partitions include noexec option"
    description: "The noexec mount option specifies that the filesystem cannot contain executable binaries. "
    rationale:
      "Setting this option on a file system prevents users from executing programs from the "
      "removable media. This deters users from being able to introduce potentially malicious "
      "software on the system."
    remediation:
      "Edit the /etc/stab file and add noexec to the fourth field (mounting options) of all "
      "removable media partitions. Look for entries that have mount points that contain words "
      "such as floppy or cdrom. See the fstab (5) manual page for more information."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{"
      " instance_scanning: {"
      " check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/sys/devices/\""
      "        recursive: true"
      "        opt_out_path_regexes: \"/sys/devices/system/memory\""
      "        opt_out_path_regexes: \"/sys/devices/virtual\""
      "        filename_regex: \"removable\""
      "       }"
      "      }"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"\\\\s*[0-9a-z]+\\\\s*\""
      "          expected_regex: \"\\\\s*1\\\\s*\""
      "        }"
      "      }"
      "      non_compliance_msg: \"A removable device was found. Remove it, or make sure that its partition includes the noexec option\""
      "      file_display_command: \""
      "      #!/usr/bin/bash"
      "      for rmpo in $(lsblk -o RM,MOUNTPOINT | awk -F \\\" \\\" '/1/ {print $2}'); do"
      "      findmnt -n \\\"$rmpo\\\" | grep -Ev \\\"\\\\bnoexec\\\\b\\\""
      "      done"
      "      \""
      "    }"
      " }"
      "}}"
  }
}
benchmark_configs: {
  id: "removable-media-partitions-nodev"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:centos:centos:7.%02" version: "4.0.0" benchmark_document: "CIS Centos Linux 7.x" }
    title: "Ensure nodev option set on removable media partitions"
    description: "The nodev mount option specifies that the filesystem cannot contain special devices."
    rationale:
      "Removable media containing character and block special devices could be used to "
      "circumvent security controls by allowing non-root users to access sensitive device files "
      "such as /dev/kmem or the raw disk partitions."
    remediation:
      "Edit the /etc/fstab file and add nodev to the fourth field (mounting options) of all "
      "removable media partitions. Look for entries that have mount points that contain words "
      "such as floppy or cdrom. See the fstab (5) manual page for more information."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{"
      " instance_scanning: {"
      " check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/sys/devices/\""
      "        recursive: true"
      "        opt_out_path_regexes: \"/sys/devices/system/memory\""
      "        opt_out_path_regexes: \"/sys/devices/virtual\""
      "        filename_regex: \"removable\""
      "       }"
      "      }"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"\\\\s*[0-9a-z]+\\\\s*\""
      "          expected_regex: \"\\\\s*1\\\\s*\""
      "        }"
      "      }"
      "      non_compliance_msg: \"A removable device was found. Remove it, or make sure that its partition includes the nodev option\""
      "      file_display_command: \""
      "      #!/usr/bin/bash"
      "      for rmpo in $(lsblk -o RM,MOUNTPOINT | awk -F \\\" \\\" '/1/ {print $2}'); do"
      "      findmnt -n \\\"$rmpo\\\" | grep -Ev \\\"\\\\bnodev\\\\b\\\""
      "      done"
      "      \""
      "    }"
      " }"
      "}}"
  }
}
benchmark_configs: {
  id: "removable-media-partitions-nosuid"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:centos:centos:7.%02" version: "4.0.0" benchmark_document: "CIS Centos Linux 7.x" }
    title: "Ensure nosuid option set on removable media partitions"
    description: "The nosuid mount option specifies that the filesystem cannot contain setuid files."
    rationale:
      "Setting this option on a file system prevents users from introducing privileged programs "
      "onto the system and allowing non-root users to execute them."
    remediation:
      "Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) of all "
      "removable media partitions. Look for entries that have mount points that contain words "
      "such as floppy or cdrom. See the fstab (5) manual page for more information."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "scan_type_specific:{"
      " instance_scanning: {"
      " check_alternatives:{"
      "    file_checks:{"
      "      files_to_check:{files_in_dir:{"
      "        dir_path:\"/sys/devices/\""
      "        recursive: true"
      "        opt_out_path_regexes: \"/sys/devices/system/memory\""
      "        opt_out_path_regexes: \"/sys/devices/virtual\""
      "        filename_regex: \"removable\""
      "       }"
      "      }"
      "      content_entry:{"
      "        match_type: ALL_MATCH_ANY_ORDER"
      "        match_criteria: {"
      "          filter_regex: \"\\\\s*[0-9a-z]+\\\\s*\""
      "          expected_regex: \"\\\\s*1\\\\s*\""
      "        }"
      "      }"
      "      non_compliance_msg: \"A removable device was found. Remove it, or make sure that its partition includes the nosuid option\""
      "      file_display_command: \""
      "      #!/usr/bin/bash"
      "      for rmpo in $(lsblk -o RM,MOUNTPOINT | awk -F \\\" \\\" '/1/ {print $2}'); do"
      "      findmnt -n \\\"$rmpo\\\" | grep -Ev \\\"\\\\bnodev\\\\b\\\""
      "      done"
      "      \""
      "    }"
      " }"
      "}}"
  }
}
benchmark_configs: {
  id: "firewalld-is-installed"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:centos:centos:7.%02" version: "4.0.0" benchmark_document: "CIS Centos Linux 7.x" }
    title: "Ensure firewalld is installed"
    description:
      "firewalld is a firewall management tool for Linux operating systems. It provides firewall "
      "features by acting as a front-end for the Linux kernel's netfilter framework via the iptables "
      "backend or provides firewall features by acting as a front-end for the Linux kernel's "
      "netfilter framework via the nftables utility.\n"
      "firewalld replaces iptables as the default firewall management tool. Use the firewalld utility "
      "to configure a firewall for less complex firewalls. The utility is easy to use and covers the "
      "typical use cases scenario. FirewallD supports both IPv4 and IPv6 networks and can"
      "administer separate firewall zones with varying degrees of trust as defined in zone profiles."
      "Note: Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux "
      "kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the "
      "nft command line program."
    rationale:
      "A firewall utility is required to configure the Linux kernel's netfilter framework via the "
      "iptables or nftables back-end.\n"
      "The Linux kernel's netfilter framework host-based firewall can protect against threats "
      "originating from within a corporate network to include malicious mobile code and poorly "
      "configured software on a host.\n"
      "Note: Only one firewall utility should be installed and configured. Firewal11D is dependent on "
      "the iptables package.\n"
      "Impact:\n"
      "Changing firewall settings while connected over the network can result in being locked out "
      "of the system."
    remediation:
      "Run the following command to install Firewall and iptables:\n"
      "# yum install firewalld iptables"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "generic:{check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/bin/firewalld\"}}"
      "    existence:{should_exist: true}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/sbin/firewalld\"}}"
      "    existence:{should_exist: true}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/bin/firewalld\"}}"
      "    existence:{should_exist: true}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/sbin/firewalld\"}}"
      "    existence:{should_exist: true}"
      "  }"
      "}"
      "}"
  }
}
