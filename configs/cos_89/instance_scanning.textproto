benchmark_configs: {
  id: "tmp-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure /tmp is configured"
    description:
      "The /tmp directory is a world-writable directory used for temporary "
      "storage by all users and some applications."
    rationale:
      "Making /tmp its own file system allows an administrator to set the "
      "noexec option on the mount, making /tmp useless for an attacker to "
      "install executable code. It would also prevent an attacker from "
      "establishing a hardlink to a system setuid program and wait for it to "
      "be updated. Once the program was updated, the hardlink would be "
      "broken and the attacker would have his own copy of the program. If "
      "the program happened to have a security vulnerability, the attacker "
      "could continue to exploit the known flaw. This can be accomplished "
      "by either mounting tmpfs to /tmp, or creating a separate partition "
      "for /tmp."
    remediation:
      "Configure /etc/fstab as appropriate.\n"
      "example:\n"
      "```\n"
      "tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0\n"
      "```\n"
      "OR\n"
      "Run the following commands to enable systemd /tmp mounting:\n"
      "```\n"
      "systemctl unmask tmp.mount\n"
      "systemctl enable tmp.mount\n"
      "```\n"
      "Edit /usr/lib/systemd/system/tmp.mount to configure \n"
      "the /tmp mount:\n"
      "```\n"
      "[Mount]\n"
      "What=tmpfs\n"
      "Where=/tmp\n"
      "Type=tmpfs\n"
      "Options=mode=1777,strictatime,noexec,nodev,nosuid\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .*- .*\""
      "        expected_regex: \".* /tmp .*- tmpfs tmpfs.*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/lib/systemd/system/tmp.mount\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Type=.*\""
      "        expected_regex: \"Type=tmpfs\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "tmp-nodev"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure nodev option set on /tmp partition"
    description:
      "The nodev mount option specifies that the filesystem cannot contain "
      "special devices."
    rationale:
      "Since the /tmp filesystem is not intended to support devices, set "
      "this option to ensure that users cannot attempt to create block or "
      "character special devices in /tmp ."
    remediation:
      "Edit the /etc/fstab file and add nodev to the fourth field (mounting "
      "options) for the /tmp partition. See the fstab(5) manual page for "
      "more information.\n"
      "Run the following command to remount /tmp:\n"
      "```\n"
      "# mount -o remount,nodev /tmp\n"
      "```\n"
      "or\n"
      "Edit the config file in /usr/lib/systemd/system/tmp.mount.d to add "
      "nodev to the /tmp mount options:\n"
      "```\n"
      "[Mount]\n"
      "Options=mode=1777,strictatime,noexec,nodev,nosuid\n"
      "Run the following command to remount /tmp:\n"
      "# mount -o remount,nodev /tmp\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .* - .*\""
      "        expected_regex: \".* /tmp .*nodev.* - .*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/usr/lib/systemd/system/tmp.mount.d\""
      "      recursive: true"
      "    }}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Options=.*\""
      "        expected_regex: \"Options=.*nodev.*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .* - .*\""
      "        expected_regex: \".* /tmp .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "tmp-nosuid"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure nosuid option set on /tmp partition"
    description:
      "The nosuid mount option specifies that the filesystem cannot contain "
      "setuid files."
    rationale:
      "Since the /tmp filesystem is only intended for temporary file "
      "storage, set this option to ensure that users cannot create setuid "
      "files in /tmp ."
    remediation:
      "Edit the /etc/fstab file and add nosuid to the fourth field (mounting "
      "options) for the /tmp partition. See the fstab(5) manual page for "
      "more information."
      "Run the following command to remount /tmp:\n"
      "```\n"
      "# mount -o remount,nosuid /tmp\n"
      "```\n"
      "or\n"
      "Edit the config file in /usr/lib/systemd/system/tmp.mount.d to add "
      "nosuid to the /tmp mount options:\n"
      "```\n"
      "[Mount]\n"
      "Options=mode=1777,strictatime,noexec,nodev,nosuid\n"
      "Run the following command to remount /tmp:\n"
      "# mount -o remount,nosuid /tmp\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .* - .*\""
      "        expected_regex: \".* /tmp .*nosuid.* - .*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/usr/lib/systemd/system/tmp.mount.d\""
      "      recursive: true"
      "    }}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Options=.*\""
      "        expected_regex: \"Options=.*nosuid.*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .* - .*\""
      "        expected_regex: \".* /tmp .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "tmp-noexec"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure noexec option set on /tmp partition"
    description:
      "The noexec mount option specifies that the filesystem cannot contain "
      "executable binaries."
    rationale:
      "Since the /tmp filesystem is only intended for temporary file "
      "storage, set this option to ensure that users cannot run executable "
      "binaries from /tmp ."
    remediation:
      "Edit the /etc/fstab file and add noexec to the fourth field (mounting "
      "options) for the /tmp partition. See the fstab(5) manual page for "
      "more information.\n"
      "Run the following command to remount /tmp:\n"
      "```\n"
      "# mount -o remount,noexec /tmp\n"
      "```\n"
      "or\n"
      "Edit the config file in /usr/lib/systemd/system/tmp.mount.d to add "
      "noexec to the /tmp mount options:\n"
      "```\n"
      "[Mount]\n"
      "Options=mode=1777,strictatime,noexec,nodev,nosuid\n"
      "Run the following command to remount /tmp:\n"
      "# mount -o remount,noexec /tmp\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .* - .*\""
      "        expected_regex: \".* /tmp .*noexec.* - .*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/usr/lib/systemd/system/tmp.mount.d\""
      "      recursive: true"
      "    }}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Options=.*\""
      "        expected_regex: \"Options=.*noexec.*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /tmp .* - .*\""
      "        expected_regex: \".* /tmp .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "home-nodev"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure nodev option set on /home partition"
    description:
      "The nodev mount option specifies that the filesystem cannot contain "
      "special devices."
    rationale:
      "Since the user partitions are not intended to support devices, set "
      "this option to ensure that users cannot attempt to create block or "
      "character special devices."
    remediation:
      "Edit the /etc/fstab file and add nodev to the fourth field (mounting "
      "options) for the /home partition. See the fstab(5) manual page for "
      "more information.\n"
      "# mount -o remount,nodev /home"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /home .* - .*\""
      "        expected_regex: \".* /home .*nodev.* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /home .* - .*\""
      "        expected_regex: \".* /home .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "shm-nodev"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure nodev option set on /dev/shm partition"
    description:
      "The nodev mount option specifies that the filesystem cannot contain "
      "special devices."
    rationale:
      "Since the /dev/shm filesystem is not intended to support devices, set "
      "this option to ensure that users cannot attempt to create special "
      "devices in /dev/shm partitions."
    remediation:
      "Edit the /etc/fstab file and add nodev to the fourth field (mounting "
      "options) for the /dev/shm partition. See the fstab(5) manual page for "
      "more information.\n"
      "Run the following command to remount /dev/shm:\n"
      "```\n"
      "# mount -o remount,nodev /dev/shm\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /dev/shm .* - .*\""
      "        expected_regex: \".* /dev/shm .*nodev.* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /dev/shm .* - .*\""
      "        expected_regex: \".* /dev/shm .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "shm-nosuid"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure nosuid option set on /dev/shm partition"
    description:
      "The nosuid mount option specifies that the filesystem cannot contain "
      "setuid files."
    rationale:
      "Setting this option on a file system prevents users from introducing "
      "privileged programs onto the system and allowing non-root users to "
      "execute them."
    remediation:
      "Edit the /etc/fstab file and add nosuid to the fourth field (mounting "
      "options) for the /dev/shm partition. See the fstab(5) manual page for "
      "more information.\n"
      "Run the following command to remount /dev/shm:\n"
      "```\n"
      "# mount -o remount,nosuid /dev/shm\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /dev/shm .* - .*\""
      "        expected_regex: \".* /dev/shm .*nosuid.* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /dev/shm .* - .*\""
      "        expected_regex: \".* /dev/shm .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "shm-noexec"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure noexec option set on /dev/shm partition"
    description:
      "The noexec mount option specifies that the filesystem cannot contain "
      "executable binaries."
    rationale:
      "Setting this option on a file system prevents users from executing "
      "programs from shared memory. This deters users from introducing "
      "potentially malicious software on the system."
    remediation:
      "Make sure the /usr/lib/systemd/system/dev-shm-remount.service file "
      "remounts the /dev/shm partition with noexec:\n"
      "```\n"
      "ExecStart=/bin/mount -o remount,noexec /dev/shm\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".* /dev/shm .* - .*\""
      "        expected_regex: \".* /dev/shm .*noexec.* - .*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/lib/systemd/system/dev-shm-remount.service\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"ExecStart=.*\""
      "        expected_regex: \"ExecStart=/bin/mount -o remount.*noexec.* /dev/shm\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/self/mountinfo\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".* /dev/shm .* - .*\""
      "        expected_regex: \".* /dev/shm .* - .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "automounting-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Disable Automounting"
    description:
      "autofs allows automatic mounting of devices, typically including CD/"
      "DVDs and USB drives."
    rationale:
      "With automounting enabled anyone with physical access could attach a "
      "USB drive or disc and have its contents available in system even if "
      "they lacked permissions to mount it themselves."
    remediation:
      "Run one of the following commands to disable autofs:\n"
      "```\n"
      "# chkconfig autofs off\n"
      "# systemctl disable autofs\n"
      "# update-rc.d autofs disable\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/systemd/system\""
      "      recursive: true"
      "      filename_regex: \"autofs.service\""
      "    }}"
      "    existence:{should_exist: false}"
      "    non_compliance_msg: \"a config file in /etc/systemd/system enables autofs\""
      "    file_display_command: \"find /etc/systemd/system -name 'autofs.service'\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "dm-verity-installed"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure dm-verity is enabled"
    description:
      "device-mapper-verity (dm-verity) kernel feature provides transparent "
      "integrity checking of block devices using a cryptographic digest "
      "provided by the kernel crypto API."
    rationale:
      "The Container-Optimized OS root filesystem is always mounted as "
      "read-only. Additionally, its checksum is computed at build time and "
      "verified by the kernel on each boot. This mechanism prevents against "
      "attackers from \"owning\" the machine through permanent local changes."
    remediation: "An OS image update that has the dm-verity enabled kernel is required."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/config.gz\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"CONFIG_DM_VERITY=.*\""
      "        expected_regex: \"CONFIG_DM_VERITY=y\""
      "      }"
      "    }"
      "  }"
      "}"
  }
  # TODO(b/379711502): Add an additional check that doesn't use /proc.
}
benchmark_configs: {
  id: "auth-for-single-user-required-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure authentication required for single user mode"
    description:
      "Single user mode is used for recovery when the system detects an "
      "issue during boot or by manual selection from the bootloader."
    rationale:
      "Requiring authentication in single user mode prevents an unauthorized "
      "user from rebooting the system into single user to gain root "
      "privileges without credentials."
    remediation:
      "Rootfs is read-only file system. Therefore, update to an OS image "
      "which requires single user mode authentication."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/lib/systemd/system/rescue.service\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"ExecStart=-/usr/lib/systemd/systemd-sulogin-shell.*\""
      "        expected_regex: \"ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/usr/lib/systemd/system/emergency.service\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"ExecStart=-/usr/lib/systemd/systemd-sulogin-shell.*\""
      "        expected_regex: \"ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "nx-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure XD/NX support is enabled"
    description:
      "Recent processors in the x86 family support the ability to prevent "
      "code execution on a per memory page basis. Generically and on AMD "
      "processors, this ability is called No Execute (NX), while on Intel "
      "processors it is called Execute Disable (XD). This ability can help "
      "prevent exploitation of buffer overflow vulnerabilities and should be "
      "activated whenever possible. Extra steps must be taken to ensure that "
      "this protection is enabled, particularly on 32-bit x86 systems. Other "
      "processors, such as Itanium and POWER, have included such support "
      "since inception and the standard kernel for those platforms supports "
      "the feature."
    rationale:
      "Enabling any feature that can protect against buffer overflow attacks "
      "enhances the security of the system."
    remediation:
      "On 32 bit systems install a kernel with PAE support, no installation "
      "is required on 64 bit systems:\n"
      "If necessary configure your bootloader to load the new kernel and "
      "reboot the system.\n"
      "You may need to enable NX or XD support in your bios.\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/cmdline\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*noexec=.*\""
      "        expected_regex: \".*noexec=off.*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/cpuinfo\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"flags\\\\s*: .*\""
      "        expected_regex: \"flags\\\\s*: .* nx .*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"flags\\\\s*: .*\""
      "        expected_regex: \"flags\\\\s*: .* pae .*\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/boot/efi/boot/grub.cfg\"}}"
      "    files_to_check:{single_file:{path:\"/boot/grub/grub.cfg\"}}"
      "    files_to_check:{single_file:{path:\"/boot/grub2/user.cfg\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*noexec=.*\""
      "        expected_regex: \".*noexec=off.*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "aslr-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure address space layout randomization (ASLR) is enabled"
    description:
      "Address space layout randomization (ASLR) is an exploit mitigation "
      "technique which randomly arranges the address space of key data areas "
      "of a process."
    rationale:
      "Randomly placing virtual memory regions will make it difficult to "
      "write memory page exploits as the memory placement will be "
      "consistently shifting."
    remediation:
      "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* "
      "file:\n"
      "```\n"
      "kernel.randomize_va_space = 2\n"
      "```\n"
      "Run the following command to set the active kernel parameter:\n"
      "```\n"
      "# sysctl -w kernel.randomize_va_space=2\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/kernel/randomize_va_space\"}}"
      "    content:{content:\"2\\n\"}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/sysctl.d\""
      "      recursive: true"
      "    }}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"kernel.randomize_va_space *=.*\""
      "        expected_regex: \"kernel.randomize_va_space *= *2\""
      "      }"
      "    }"
      "    non_compliance_msg: \"a config file in /etc/sysctl.d/ disabled ASLR\""
      "    file_display_command: \"grep -l 'kernel.randomize_va_space' /etc/sysctl.d/*\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "apparmor-installed"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SELinux or AppArmor are installed"
    description: "SELinux and AppArmor provide Mandatory Access Controls."
    rationale:
      "Without a Mandatory Access Control system installed only the default "
      "Discretionary Access Control system will be available."
    remediation:
      "Install SELinux or apparmor using the appropriate package manager or "
      "manual installation."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"apparmor\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"apparmor\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "local-login-warning-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure local login warning banner is configured properly"
    description:
      "The contents of the /etc/issue file are displayed to users prior to "
      "login for local terminals. Unix-based systems have typically "
      "displayed information about the OS release and patch level upon "
      "logging in to the system. This information can be useful to "
      "developers who are developing software for a particular OS platform. "
      "If mingetty(8) supports the following options, they display operating "
      "system information: \\m - machine architecture \\r - operating system "
      "release \\s - operating system name \\v - operating system version - or "
      "the operating system's name"
    rationale:
      "Warning messages inform users who are attempting to login to the "
      "system of their legal status regarding the system and must include "
      "the name of the organization that owns the system and any monitoring "
      "policies that are in place. Displaying OS and patch level information "
      "in login banners also has the side effect of providing detailed "
      "system information to attackers attempting to target specific "
      "exploits of a system. Authorized users can easily get this "
      "information by running the \" uname -a \" command once they have logged in."
    remediation:
      "Make sure the /etc/issue file is empty. Alternatively, edit the /etc/issue "
      "file with the appropriate contents according to your site policy, remove "
      "any instances of \\m , \\r , \\s , \\v or references to the OS platform, "
      "and opt the file out from scanning to prevent further compliance reports."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/issue\"}}"
      "    content:{content:\"\"}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/issue\"}}"
      "    existence:{should_exist:false}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "remote-login-warning-configured"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure remote login warning banner is configured properly"
    description:
      "The contents of the /etc/issue.net file are displayed to users prior to "
      "login for remote connections from configured services."
      "Unix-based systems have typically displayed information about the OS "
      "release and patch level upon logging in to the system. This "
      "information can be useful to developers who are developing software "
      "for a particular OS platform. If mingetty(8) supports the following "
      "options, they display operating system information: \\m - machine "
      "architecture \\r - operating system release \\s - operating system "
      "name \\v - operating system version"
    rationale:
      "Warning messages inform users who are attempting to login to the "
      "system of their legal status regarding the system and must include "
      "the name of the organization that owns the system and any monitoring "
      "policies that are in place. Displaying OS and patch level information "
      "in login banners also has the side effect of providing detailed "
      "system information to attackers attempting to target specific "
      "exploits of a system. Authorized users can easily get this "
      "information by running the \" uname -a \" command once they have logged "
      "in."
    remediation:
      "Make sure the /etc/issue.net file is empty or deleted. Alternatively, "
      "edit the /etc/issue.net file with the appropriate contents according "
      "to your site policy, remove any instances of \\m , \\r , \\s , \\v "
      "or references to the OS platform and opt the file out from scanning "
      "to prevent further compliance reports."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/issue.net\"}}"
      "    content:{content:\"\"}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/issue.net\"}}"
      "    existence:{should_exist:false}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "etc-issue-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/issue are configured"
    description:
      "The contents of the /etc/issue file are displayed to users prior to "
      "login for local terminals."
    rationale:
      "If the /etc/issue file does not have the correct ownership it could "
      "be modified by unauthorized users with incorrect or misleading "
      "information."
    remediation:
      "Run the following commands to set permissions on /etc/issue:\n"
      "```\n"
      "# chown root:root /etc/issue\n"
      "# chmod 644 /etc/issue\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/issue\"}}"
      "    permission:{"
      "      set_bits: 0444"
      "      clear_bits: 0133"
      "      bits_should_match: BOTH_SET_AND_CLEAR"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/issue\"}}"
      "    existence:{should_exist:false}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "chrony-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure time synchronization is in use"
    description:
      "System time should be synchronized between all systems in an environment. This\n"
      "is typically done by establishing an authoritative time server or set of\n"
      "servers and having all systems synchronize their clocks to them."
    rationale:
      "Time synchronization is important to support time sensitive security\n"
      "mechanisms like Kerberos and also ensures log files have consistent time\n"
      "records across the enterprise, which aids in forensic investigations."
    remediation:
      "On physical systems or virtual systems where host based time "
      "synchronization is not available update to an image that comes with "
      "chrony package installed.\n"
      "On virtual systems where host based time synchronization is available "
      "consult your virtualization software documentation and setup host "
      "based synchronization."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"chrony\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"chrony\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "chrony-configured-cos-89"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure chrony is configured"
    description:
      "chrony is a daemon which implements the Network Time Protocol (NTP) is\n"
      "designed to synchronize system clocks across a variety of systems and use a\n"
      "source that is highly accurate. More information on chrony can be found at\n"
      "http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a\n"
      "server."
    rationale:
      "If chrony is in use on the system proper configuration is vital to ensuring\n"
      "time synchronization is working properly. This recommendation only applies if\n"
      "chrony is in use on the system."
    remediation:
      "Add or edit server or pool lines to /etc/chrony.conf as appropriate:\n"
      "```\n"
      "server <remote-server>\n"
      "```\n"
      "Configure chrony to run as the chrony user by configuring the appropriate\n"
      "startup script for your distribution. Startup scripts are typically stored in \n"
      "/etc/init.d or /etc/systemd"
    cis_benchmark: {
      profile_level: 2
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/chrony/chrony.conf\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"server|pool .*\""
      "        expected_regex: \"server|pool .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "x-window-system-not-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure X Window System is not installed"
    description:
      "The X Window System provides a Graphical User Interface (GUI) where users can\n"
      "have multiple windows in which to run programs and various add on. The X\n"
      "Windows system is typically used on workstations where users login, but not on\n"
      "servers where users typically do not login."
    rationale:
      "Unless your organization specifically requires graphical login access via X\n"
      "Windows, remove it to reduce the potential attack surface."
    remediation: "An OS image update that does not include X Window System is required."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\".*xorg.*\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\".*xorg.*\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "nfs-rpc-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure NFS and RPC are not enabled"
    description:
      "The Network File System (NFS) is one of the first and most widely distributed\n"
      "file systems in the UNIX environment. It provides the ability for systems to\n"
      "mount file systems of other servers through the network."
    rationale:
      "If the system does not export NFS shares or act as an NFS client, it is\n"
      "recommended that these services be disabled to reduce the remote attack\n"
      "surface."
    remediation:
      "Run one of the following commands to disable nfs and rpcbind:\n"
      "```\n"
      "# chkconfig nfs off\n"
      "# chkconfig rpcbind off\n"
      "# systemctl disable nfs\n"
      "# systemctl disable rpcbind\n"
      "# update-rc.d nfs disable\n"
      "# update-rc.d rpcbind disable\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{"
      "      files_in_dir:{"
      "        dir_path:\"/etc/systemd/system\""
      "        recursive: true"
      "        filename_regex: \"nfs.service\""
      "      }"
      "    }"
      "    files_to_check:{"
      "      files_in_dir:{"
      "        dir_path:\"/etc/systemd/system\""
      "        recursive: true"
      "        filename_regex: \"rpcbind.service\""
      "      }"
      "    }"
      "    existence:{should_exist: false}"
      "    non_compliance_msg: \"a config file in /etc/systemd/system enables nfs or rpcbind\""
      "    file_display_command: \"find /etc/systemd/system -name 'nfs.service'; find /etc/systemd/system -name 'rpcbind.service'\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "rsync-disabled-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure rsync service is not enabled"
    description:
      "The rsyncd service can be used to synchronize files between systems over\n"
      "network links."
    rationale:
      "The rsyncd service presents a security risk as it uses unencrypted protocols\n"
      "for communication."
    remediation:
      "Run the following command to disable rsyncd:\n"
      "```\n"
      "# systemctl --now disable rsyncd\n"
      "```\n"
      "`/etc` is stateless on Container-Optimized OS. Therefore, `/etc` "
      "cannot be used to make these changes persistent across reboots. The "
      "steps mentioned above needs to be performed after every boot."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/systemd/system\""
      "      recursive: true"
      "      filename_regex: \"rsyncd.service\""
      "    }}"
      "    existence:{should_exist: false}"
      "    non_compliance_msg: \"a config file in /etc/systemd/system enables rsyncd\""
      "    file_display_command: \"find /etc/systemd/system -name rsyncd.service\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "nis-client-not-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure NIS Client is not installed"
    description:
      "The Network Information Service (NIS), formerly known as Yellow Pages, is a\n"
      "client-server directory service protocol used to distribute system\n"
      "configuration files. The NIS client ( ypbind ) was used to bind a machine to\n"
      "an NIS server and receive the distributed configuration files."
    rationale:
      "The NIS service is inherently an insecure system that has been vulnerable to\n"
      "DOS attacks, buffer overflows and has poor authentication for querying NIS\n"
      "maps. NIS generally has been replaced by such protocols as Lightweight\n"
      "Directory Access Protocol (LDAP). It is recommended that the service be removed."
    remediation:
      "Uninstall ypbind using the appropriate package manager or manual installation:\n"
      "```\n"
      "yum remove ypbind\n"
      "apt-get remove ypbind\n"
      "zypper remove ypbind\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"ypbind\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"ypbind\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "rsh-client-not-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure rsh client is not installed"
    description: "The rsh package contains the client commands for the rsh services."
    rationale:
      "These legacy clients contain numerous security exposures and have been\n"
      "replaced with the more secure SSH package. Even if the server is removed, it\n"
      "is best to ensure the clients are also removed to prevent users from\n"
      "inadvertently attempting to use these commands and therefore exposing their\n"
      "credentials. Note that removing the rsh package removes the clients for rsh,\n"
      "rcp and rlogin."
    remediation:
      "Uninstall rsh using the appropriate package manager or manual installation:\n"
      "```\n"
      "yum remove rsh\n"
      "apt-get remove rsh\n"
      "zypper remove rsh\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"rsh\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"rsh\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "talk-client-not-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure talk client is not installed"
    description:
      "The talk software makes it possible for users to send and receive messages\n"
      "across systems through a terminal session. The talk client, which allows\n"
      "initialization of talk sessions, is installed by default."
    rationale:
      "The software presents a security risk as it uses unencrypted protocols for\n"
      "communication."
    remediation:
      "Uninstall talk using the appropriate package manager or manual installation:\n"
      "```\n"
      "yum remove talk\n"
      "apt-get remove talk\n"
      "zypper remove talk\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"talk\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"talk\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "telnet-client-not-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure telnet client is not installed"
    description:
      "The telnet package contains the telnet client, which allows users to start\n"
      "connections to other systems via the telnet protocol."
    rationale:
      "The telnet protocol is insecure and unencrypted. The use of an unencrypted\n"
      "transmission medium could allow an unauthorized user to steal credentials. The\n"
      "ssh package provides an encrypted session and stronger security and is\n"
      "included in most Linux distributions."
    remediation:
      "Uninstall telnet using the appropriate package manager or manual installation:\n"
      "```\n"
      "# yum remove telnet\n"
      "# apt-get remove telnet\n"
      "# zypper remove telnet\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"telnet\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"telnet\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ldap-client-not-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure LDAP client is not installed"
    description:
      "The Lightweight Directory Access Protocol (LDAP) was introduced as a\n"
      "replacement for NIS/YP. It is a service that provides a method for looking up\n"
      "information from a central database."
    rationale:
      "If the system will not need to act as an LDAP client, it is recommended that\n"
      "the software be removed to reduce the potential attack surface."
    remediation:
      "Uninstall openldap-clients using the appropriate package manager or manual\n"
      "installation:\n"
      "```\n"
      "# yum remove openldap-clients\n"
      "# apt-get remove openldap-clients\n"
      "# zypper remove openldap-clients\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"openldap-clients\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"openldap-clients\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "packet-redirect-sending-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure packet redirect sending is disabled"
    description:
      "ICMP Redirects are used to send routing information to other hosts. As a host\n"
      "itself does not act as a router (in a host only configuration), there is no\n"
      "need to send redirects."
    rationale:
      "An attacker could use a compromised host to send invalid ICMP redirects to\n"
      "other router devices in an attempt to corrupt routing and have users access a\n"
      "system set up by the attacker as opposed to a valid system."
    remediation:
      "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:\n"
      "```\n"
      "net.ipv4.conf.all.send_redirects = 0\n"
      "net.ipv4.conf.default.send_redirects = 0\n"
      "```\n"
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.conf.all.send_redirects=0\n"
      "# sysctl -w net.ipv4.conf.default.send_redirects=0\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/all/send_redirects\"}}"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/default/send_redirects\"}}"
      "    content:{content:\"0\\n\"}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/sysctl.d\""
      "      recursive: true"
      "    }}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.conf.all.send_redirects *=.*\""
      "        expected_regex: \"net.ipv4.conf.all.send_redirects *= *0\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.conf.default.send_redirects *=.*\""
      "        expected_regex: \"net.ipv4.conf.default.send_redirects *= *0\""
      "      }"
      "    }"
      "    non_compliance_msg: \"a config file in /etc/sysctl.d/ enables send_redirects\""
      "    file_display_command: \"grep -l 'send_redirects' /etc/sysctl.d/*\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "source-routed-packets-not-accepted-cos-89"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure source routed packets are not accepted"
    description:
      "In networking, source routing allows a sender to partially or fully specify\n"
      "the route packets take through a network. In contrast, non-source routed\n"
      "packets travel a path determined by routers in the network. In some cases,\n"
      "systems may not be routable or reachable from some locations (e.g. private\n"
      "addresses vs. Internet routable), and so source routed packets would need to\n"
      "be used."
    rationale:
      "Setting net.ipv4.conf.all.accept_source_route, and \n"
      "net.ipv4.conf.default.accept_source_route to 0 disables the system from \n"
      "accepting source routed packets. Assume this system was capable of routing \n"
      "packets to Internet routable addresses on one interface and private addresses \n"
      "on another interface. Assume that the private addresses were not routable to \n"
      "the Internet routable addresses and vice versa. Under normal routing \n"
      "circumstances, an attacker from the Internet routable addresses could not use \n"
      "the system as a way to reach the private address systems. If, however, source \n"
      "routed packets were allowed, they could be used to gain access to the private \n"
      "address systems as the route could be specified, rather than rely on routing \n"
      "protocols that did not allow this routing."
    remediation:
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.conf.all.accept_source_route=0\n"
      "# sysctl -w net.ipv4.conf.default.accept_source_route=0\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 2
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/all/accept_source_route\"}}"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/default/accept_source_route\"}}"
      "    content:{content:\"0\\n\"}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "icmp-redirects-not-accepted-cos-89"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure ICMP redirects are not accepted"
    description:
      "ICMP redirect messages are packets that convey routing information and tell\n"
      "your host (acting as a router) to send packets via an alternate path. It is a\n"
      "way of allowing an outside routing device to update your system routing\n"
      "tables. By setting net.ipv4.conf.all.accept_redirects to 0, the system will\n"
      "not accept any ICMP redirect messages, and therefore, won't allow outsiders\n"
      "to update the system's routing tables."
    rationale:
      "Attackers could use bogus ICMP redirect messages to maliciously alter the\n"
      "system routing tables and get them to send packets to incorrect networks and\n"
      "allow your system packets to be captured."
    remediation:
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.conf.all.accept_redirects=0\n"
      "# sysctl -w net.ipv4.conf.default.accept_redirects=0\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/all/accept_redirects\"}}"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/default/accept_redirects\"}}"
      "    content:{content:\"0\\n\"}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "broadcast-icmp-requests-ignored"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure broadcast ICMP requests are ignored"
    description:
      "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to\n"
      "ignore all ICMP echo and timestamp requests to broadcast and multicast\n"
      "addresses."
    rationale:
      "Accepting ICMP echo and timestamp requests with broadcast or multicast\n"
      "destinations for your network could be used to trick your host into starting\n"
      "or participating) in a Smurf attack. A Smurf attack relies on an attacker\n"
      "sending large amounts of ICMP broadcast messages with a spoofed source\n"
      "address. All hosts receiving this message and responding would send echo-reply\n"
      "messages back to the spoofed address, which is probably not routable. If many\n"
      "hosts respond to the packets, the amount of traffic on the network could be\n"
      "significantly multiplied."
    remediation:
      "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:\n"
      "```\n"
      "net.ipv4.icmp_echo_ignore_broadcasts = 1\n"
      "```\n"
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/icmp_echo_ignore_broadcasts\"}}"
      "    content:{content:\"1\\n\"}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/sysctl.d/\""
      "      recursive: true"
      "    }}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.icmp_echo_ignore_broadcasts *=.*\""
      "        expected_regex: \"net.ipv4.icmp_echo_ignore_broadcasts *= *1\""
      "      }"
      "    }"
      "    non_compliance_msg: \"config files in /etc/sysctl.d/ do not enable echo_ignore_broadcasts\""
      "    file_display_command: \"grep -l 'echo_ignore_broadcasts' /etc/sysctl.d/*\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "bogus-icmp-responses-ignored"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure bogus ICMP responses are ignored"
    description:
      "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from\n"
      "logging bogus responses (RFC-1122 non-compliant) from broadcast reframes,\n"
      "keeping file systems from filling up with useless log messages."
    rationale:
      "Some routers (and some attackers) will send responses that violate RFC-1122\n"
      "and attempt to fill up a log file system with many useless error messages."
    remediation:
      "Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:\n"
      "```\n"
      "net.ipv4.icmp_ignore_bogus_error_responses = 1\n"
      "```\n"
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/icmp_ignore_bogus_error_responses\"}}"
      "    content:{content:\"1\\n\"}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/sysctl.d/\""
      "      recursive: true"
      "    }}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.icmp_ignore_bogus_error_responses *=.*\""
      "        expected_regex: \"net.ipv4.icmp_ignore_bogus_error_responses *= *1\""
      "      }"
      "    }"
      "    non_compliance_msg: \"config files in /etc/sysctl.d/ do not enable icmp_ignore_bogus_error_responses\""
      "    file_display_command: \"grep -l 'icmp_ignore_bogus_error_responses' /etc/sysctl.d/*\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "reverse-path-filtering-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure Reverse Path Filtering is enabled"
    description:
      "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1\n"
      "forces the Linux kernel to utilize reverse path filtering on a received packet\n"
      "to determine if the packet was valid. Essentially, with reverse path\n"
      "filtering, if the return packet does not go out the same interface that the\n"
      "corresponding source packet came from, the packet is dropped (and logged if\n"
      "log_martians is set)."
    rationale:
      "Setting these flags is a good way to deter attackers from sending your system\n"
      "bogus packets that cannot be responded to. One instance where this feature\n"
      "breaks down is if asymmetrical routing is employed. This would occur when\n"
      "using dynamic routing protocols (bgp, ospf, etc) on your system. If you are\n"
      "using asymmetrical routing on your system, you will not be able to enable this\n"
      "feature without breaking the routing."
    remediation:
      "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:\n"
      "```\n"
      "net.ipv4.conf.all.rp_filter = 1\n"
      "net.ipv4.conf.default.rp_filter = 1\n"
      "```\n"
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.conf.all.rp_filter=1\n"
      "# sysctl -w net.ipv4.conf.default.rp_filter=1\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/all/rp_filter\"}}"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/conf/default/rp_filter\"}}"
      "    content:{content:\"1\\n\"}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/sysctl.d/\""
      "      recursive: true"
      "    }}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.conf.all.rp_filter *=.*\""
      "        expected_regex: \"net.ipv4.conf.all.rp_filter *= *1\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.conf.default.rp_filter *=.*\""
      "        expected_regex: \"net.ipv4.conf.default.rp_filter *= *1\""
      "      }"
      "    }"
      "    non_compliance_msg: \"config files in /etc/sysctl.d/ do not enable rp_filter\""
      "    file_display_command: \"grep -l 'rp_filter' /etc/sysctl.d/*\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "tcp-syn-cookies-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure TCP SYN Cookies is enabled"
    description:
      "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally\n"
      "until the half-open connection queue is full, at which time, the SYN cookie\n"
      "functionality kicks in. SYN cookies work by not using the SYN queue at all.\n"
      "Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include\n"
      "a specially crafted TCP sequence number that encodes the source and\n"
      "destination IP address and port number and the time the packet was sent. A\n"
      "legitimate connection would send the ACK packet of the three way handshake\n"
      "with the specially crafted sequence number. This allows the system to verify\n"
      "that it has received a valid response to a SYN cookie and allow the\n"
      "connection, even though there is no corresponding SYN in the queue."
    rationale:
      "Attackers use SYN flood attacks to perform a denial of service attacked on a\n"
      "system by sending many SYN packets without completing the three way handshake.\n"
      "This will quickly use up slots in the kernel's half-open connection queue and\n"
      "prevent legitimate connections from succeeding. SYN cookies allow the system\n"
      "to keep accepting valid connections, even if under a denial of service attack."
    remediation:
      "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:\n"
      "```\n"
      "net.ipv4.tcp_syncookies = 1\n"
      "```\n"
      "Run the following commands to set the active kernel parameters:\n"
      "```\n"
      "# sysctl -w net.ipv4.tcp_syncookies=1\n"
      "# sysctl -w net.ipv4.route.flush=1\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/proc/sys/net/ipv4/tcp_syncookies\"}}"
      "    content:{content:\"1\\n\"}"
      "  }"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/sysctl.d/\""
      "      recursive: true"
      "    }}"
      "    content_entry: {"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"net.ipv4.tcp_syncookies *=.*\""
      "        expected_regex: \"net.ipv4.tcp_syncookies *= *1\""
      "      }"
      "    }"
      "    non_compliance_msg: \"config files in /etc/sysctl.d/ do not enable tcp_syncookies\""
      "    file_display_command: \"grep -l 'tcp_syncookies' /etc/sysctl.d/*\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "iptables-installed-cos"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure iptables is installed"
    description:
      "iptables allows configuration of the IPv4 and IPv6 tables in the linux kernel\n"
      "and the rules stored within them. Most firewall configuration utilities\n"
      "operate as a front end to iptables."
    rationale: "iptables is required for firewall management and configuration."
    remediation: "An OS image update is required."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/cos-package-info.json\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*\\\"name\\\": \\\"iptables\\\".*\""
      "        expected_regex: \".*\\\"name\\\": \\\"iptables\\\".*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "journald-write-to-persistent-disk"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure journald is configured to write logfiles to persistent disk"
    description:
      "Data from journald may be stored in volatile memory or persisted locally on\n"
      "the server. Logs in memory will be lost upon a system reboot. By persisting\n"
      "logs to local disk on the server they are protected from loss."
    rationale:
      "Writing log data to disk will provide the ability to forensically reconstruct\n"
      "events which may have impacted the operations or security of a system even\n"
      "after a system crash or reboot."
    remediation:
      "Edit the /etc/systemd/journald.conf file and add the following line:\n"
      "```\n"
      "Storage=persistent\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/systemd/journald.conf\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Storage=.*\""
      "        expected_regex: \"Storage=persistent\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "sshd-config-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/ssh/sshd_config are configured"
    description:
      "The /etc/ssh/sshd_config file contains configuration specifications for sshd.\n"
      "The command below sets the owner and group of the file to root."
    rationale:
      "The /etc/ssh/sshd_config file needs to be protected from unauthorized changes\n"
      "by nonprivileged users."
    remediation:
      "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config:\n"
      "```\n"
      "# chown root:root /etc/ssh/sshd_config\n"
      "# chmod og-rwx /etc/ssh/sshd_config\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    permission:{"
      "      clear_bits: 0077"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    existence:{should_exist: false}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "sshd-private-host-key-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on SSH private host key files are configured"
    description:
      "An SSH private key is one of two files used in SSH public key authentication.\n"
      "In this authentication method, The possession of the private key is proof of\n"
      "identity. Only a private key that corresponds to a public key will be able to\n"
      "authenticate successfully. The private keys need to be stored and handled\n"
      "carefully, and no copies of the private key should be distributed."
    rationale:
      "If an unauthorized user obtains the private SSH host key file, the host could\n"
      "be impersonated"
    remediation:
      "Run the following commands to set ownership and permissions on the private SSH\n"
      "host key files\n"
      "# find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:root {} \\;\n"
      "# find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod 0600 {} \\;"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/ssh\""
      "      recursive: true"
      "      filename_regex: \"ssh_host_.*_key\""
      "      skip_symlinks: true"
      "    }}"
      "    permission:{"
      "      clear_bits: 0077"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "    non_compliance_msg: \"the permissions of a key in /etc/ssh are too broad \""
      "    file_display_command: \"find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec stat {} \\\\;\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "sshd-public-host-key-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on SSH public host key files are configured"
    description:
      "An SSH public key is one of two files used in SSH public key authentication.\n"
      "In this authentication method, a public key is a key that can be used for\n"
      "verifying digital signatures generated using a corresponding private key. Only\n"
      "a public key that corresponds to a private key will be able to authenticate\n"
      "successfully."
    rationale:
      "If a public host key file is modified by an unauthorized user, the SSH service\n"
      "may be compromised."
    remediation:
      "Run the following commands to set permissions and ownership on the SSH host\n"
      "public key files\n"
      "# find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod 0644 {} \\;\n"
      "#find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\;"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{files_in_dir:{"
      "      dir_path:\"/etc/ssh\""
      "      recursive: true"
      "      filename_regex: \"ssh_host_.*_key.pub\""
      "      skip_symlinks: true"
      "    }}"
      "    permission:{clear_bits: 0033}"
      "    non_compliance_msg: \"the permissions of a key in /etc/ssh are too broad \""
      "    file_display_command: \"find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec stat {} \\\\;\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-protocol-set-to-2"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH Protocol is set to 2"
    description:
      "Older versions of SSH support two different and incompatible protocols: SSH1\n"
      "and SSH2. SSH1 was the original protocol and was subject to security issues.\n"
      "SSH2 is more advanced and secure."
    rationale: "SSH v1 suffers from insecurities that do not affect SSH v2."
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "Protocol 2\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Protocol .*\""
      "        expected_regex: \"Protocol *2\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-loglevel-appropriate"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH LogLevel is appropriate"
    description:
      "INFO level is the basic level that only records login activity of SSH users.\n"
      "In many situations, such as Incident Response, it is important to determine\n"
      "when a particular user was active on a system. The logout record can eliminate\n"
      "those users who disconnected, which helps narrow the field.\n"
      "VERBOSE level\n"
      "specifies that login and logout activity as well as the key fingerprint for\n"
      "any SSH key used for login will be logged. This information is important for\n"
      "SSH key management, especially in legacy environments."
    rationale:
      "SSH provides several logging levels with varying amounts of verbosity. DEBUG\n"
      "is specifically not recommended other than strictly for debugging SSH\n"
      "communications since it provides so much data that it is difficult to identify\n"
      "important security information."
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "LogLevel VERBOSE\n"
      "```\n"
      "OR\n"
      "```\n"
      "LogLevel INFO\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"LogLevel .*\""
      "        expected_regex: \"LogLevel .*\""
      "      }"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"LogLevel .*\""
      "        expected_regex: \"LogLevel (INFO|VERBOSE)\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-x11-forwarding-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH X11 forwarding is disabled"
    description:
      "The X11Forwarding parameter provides the ability to tunnel X11 traffic through\n"
      "the connection to enable remote graphic connections."
    rationale:
      "Disable X11 forwarding unless there is an operational requirement to use X11\n"
      "applications directly. There is a small risk that the remote X11 servers of\n"
      "users who are logged in via SSH with X11 forwarding could be compromised by\n"
      "other users on the X11 server. Note that even if X11 forwarding is disabled,\n"
      "users can always install their own forwarders."
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "X11Forwarding no\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"X11Forwarding .*\""
      "        expected_regex: \"X11Forwarding no\""
      "      }"
      "    }"
      "  }"
      "}"
      # Default value is "no" if nothing is specified.
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"X11Forwarding .*\""
      "        expected_regex: \"X11Forwarding .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-ignorerhosts-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH IgnoreRhosts is enabled"
    description:
      "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not\n"
      "be used in RhostsRSAAuthentication or HostbasedAuthentication."
    rationale:
      "Setting this parameter forces users to enter a password when authenticating\n"
      "with ssh."
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "IgnoreRhosts yes\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"IgnoreRhosts .*\""
      "        expected_regex: \"IgnoreRhosts yes\""
      "      }"
      "    }"
      "  }"
      "}"
      # Default value is "yes" if nothing is specified.
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"IgnoreRhosts .*\""
      "        expected_regex: \"IgnoreRhosts .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-hostbasedauthentication-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH HostbasedAuthentication is disabled"
    description:
      "The HostbasedAuthentication parameter specifies if authentication is allowed\n"
      "through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with\n"
      "successful public key client host authentication. This option only applies to\n"
      "SSH Protocol Version 2."
    rationale:
      "Even though the .rhosts files are ineffective if support is disabled in /etc\n"
      "pam.conf, disabling the ability to use .rhosts files in SSH provides an\n"
      "additional layer of protection."
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "HostbasedAuthentication no\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"HostbasedAuthentication .*\""
      "        expected_regex: \"HostbasedAuthentication no\""
      "      }"
      "    }"
      "  }"
      "}"
      # Default value is "no" if nothing is specified.
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"HostbasedAuthentication .*\""
      "        expected_regex: \"HostbasedAuthentication .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-root-login-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH root login is disabled"
    description:
      "The PermitRootLogin parameter specifies if the root user can log in using ssh.\n"
      "The default is no."
    rationale:
      "Disallowing root logins over SSH requires system admins to authenticate using\n"
      "their own individual account, then escalating to root via sudo or su. This in\n"
      "turn limits opportunity for non-repudiation and provides a clear audit trail\n"
      "in the event of a security incident"
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "PermitRootLogin no\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"PermitRootLogin .*\""
      "        expected_regex: \"PermitRootLogin no\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-permitemptypasswords-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH PermitEmptyPasswords is disabled"
    description:
      "The PermitEmptyPasswords parameter specifies if the SSH server allows login to\n"
      "accounts with empty password strings."
    rationale:
      "Disallowing remote shell access to accounts that have an empty password\n"
      "reduces the probability of unauthorized access to the system"
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "PermitEmptyPasswords no\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"PermitEmptyPasswords .*\""
      "        expected_regex: \"PermitEmptyPasswords no\""
      "      }"
      "    }"
      "  }"
      "}"
      # Default value is "no" if nothing is specified.
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"PermitEmptyPasswords .*\""
      "        expected_regex: \"PermitEmptyPasswords .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-permituserenvironments-disabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH PermitUserEnvironment is disabled"
    description:
      "The PermitUserEnvironment option allows users to present environment options\n"
      "to the ssh daemon."
    rationale:
      "Permitting users the ability to set environment variables through the SSH\n"
      "daemon could potentially allow users to bypass security controls (e.g. setting\n"
      "an execution path that has ssh executing trojan'd programs)"
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "PermitUserEnvironment no\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"PermitUserEnvironment .*\""
      "        expected_regex: \"PermitUserEnvironment no\""
      "      }"
      "    }"
      "  }"
      "}"
      # Default value is "no" if nothing is specified.
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"PermitUserEnvironment .*\""
      "        expected_regex: \"PermitUserEnvironment .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "strong-ciphers-used"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure only strong Ciphers are used"
    description: "This variable limits the ciphers that SSH can use during communication."
    rationale:
      "Weak ciphers that are used for authentication to the cryptographic module\n"
      "cannot be relied upon to provide confidentiality or integrity, and system data\n"
      "may be compromised The DES, Triple DES, and Blowfish ciphers, as used in SSH,\n"
      "have a birthday bound of approximately four billion blocks, which makes it\n"
      "easier for remote attackers to obtain cleartext data via a birthday attack\n"
      "against a long-duration encrypted session, aka a \"Sweet32\" attackThe RC4\n"
      "algorithm as used in the TLS protocol and SSL protocol does not properly\n"
      "combine state data with key data during the initialization phase, which makes\n"
      "it easier for remote attackers to conduct plaintext-recovery attacks against\n"
      "the initial bytes of a stream by sniffing network traffic that occasionally\n"
      "relies on keys affected by the Invariance Weakness, and then using a brute\n"
      "force approach involving LSB values, aka the \"Bar Mitzvah\" issue.\n"
      "The passwords used during an SSH session encrypted with RC4 can be recovered\n"
      "by an attacker who is able to capture and replay the session Error handling in\n"
      "the SSH protocol; Client and Server, when using a block cipher algorithm in\n"
      "Cipher Block Chaining (CBC) mode, makes it easier for remote attackers to\n"
      "recover certain plaintext data from an arbitrary block of ciphertext in an SSH\n"
      "session via unknown vectors.\n"
      "The mm_newkeys_from_blob function in monitor_wrap.c, when an AES-GCM cipher is\n"
      "used, does not properly initialize memory for a MAC context data structure,\n"
      "which allows remote authenticated users to bypass intended ForceCommand and\n"
      "login-shell restrictions via packet data that provides a crafted callback\n"
      "address."
    remediation:
      "Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a\n"
      "comma separated list of the site approved ciphers\n"
      "Example:\n"
      "```\n"
      "Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*3des-cbc(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*aes128-cbc(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*aes192-cbc(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*aes256-cbc(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*arcfour(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*arcfour128(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*arcfour256(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*blowfish-cbc(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*cast128-cbc(,|$).*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*rijndael-cbc@lysator.liu.se(,|$).*\""
      "      }"
      "    }"
      "  }"
      # The default values are also insecure so check that they're overridden.
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"Ciphers .*\""
      "        expected_regex: \"Ciphers .*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "strong-key-exchange-algos-used"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure only strong Key Exchange algorithms are used"
    description:
      "Key exchange is any method in cryptography by which cryptographic keys are\n"
      "exchanged between two parties, allowing use of a cryptographic algorithm. If\n"
      "the sender and receiver wish to exchange encrypted messages, each must be\n"
      "equipped to encrypt messages to be sent and decrypt messages received"
    rationale:
      "Key exchange methods that are considered weak should be removed. A key\n"
      "exchange method may be weak because too few bits are used, or the hashing\n"
      "algorithm is considered too weak. Using weak algorithms could expose\n"
      "connections to man-in-the-middle attacks"
    remediation:
      "Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to\n"
      "contain a comma separated list of the site approved key exchange algorithms\n"
      "Example:\n"
      "```\n"
      "KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellmangroup14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffiehellman-group-exchange-sha256\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"KexAlgorithms .*\""
      "        expected_regex: \"KexAlgorithms .*diffie-hellman-group1-sha1.*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"KexAlgorithms .*\""
      "        expected_regex: \"KexAlgorithms .*diffie-hellman-group14-sha1.*\""
      "      }"
      "      match_criteria: {"
      "        filter_regex: \"KexAlgorithms .*\""
      "        expected_regex: \"KexAlgorithms .*diffie-hellman-group-exchange-sha1.*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "ssh-pam-enabled"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure SSH PAM is enabled"
    description:
      "UsePAM Enables the Pluggable Authentication Module interface. If set to “yes”\n"
      "this will enable PAM authentication using ChallengeResponseAuthentication and\n"
      "PasswordAuthentication in addition to PAM account and session module\n"
      "processing for all authentication types"
    rationale:
      "When usePAM is set to yes, PAM runs through account and session types\n"
      "properly. This is important if you want to restrict access to services based\n"
      "off of IP, time or other factors of the account. Additionally, you can make\n"
      "sure users inherit certain environment variables on login or disallow access\n"
      "to the server"
    remediation:
      "Edit the /etc/ssh/sshd_config file to set the parameter as follows:\n"
      "```\n"
      "UsePAM yes\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/ssh/sshd_config\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"UsePAM .*\""
      "        expected_regex: \"UsePAM yes\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "password-expiration-warning-days-7-or-more"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure password expiration warning days is 7 or more"
    description:
      "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to\n"
      "notify users that their password will expire in a defined number of days. It\n"
      "is recommended that the PASS_WARN_AGE parameter be set to 7 or more days."
    rationale:
      "Providing an advance warning that a password will be expiring gives users time\n"
      "to think of a secure password. Users caught unaware may choose a simple\n"
      "password or write it down where it may be discovered."
    remediation:
      "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs:\n"
      "```\n"
      "PASS_WARN_AGE 7\n"
      "```\n"
      "Modify user parameters for all users with a password set to match:\n"
      "```\n"
      "# chage --warndays 7 <user>\n"
      "```\n"
    cis_benchmark: {
      profile_level: 2
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/login.defs\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"PASS_WARN_AGE.*\""
      "        expected_regex: \"PASS_WARN_AGE\\\\s+(\\\\d+)\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: GREATER_THAN"
      "          const: 6"
      "        }"
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/shadow\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".+:[^!*]+:.*:.*:.*:.*:.*:.*:.*\""
      "        expected_regex: \".*:.*:.*:.*:.*:(\\\\d+):.*:.*:.*\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: LESS_THAN"
      "          const: 7"
      "        }"
      "      }"
      "    }"
      "    non_compliance_msg: \"there are users whose password expiration warning is less than 7 days\""
      "    file_display_command: \"grep -E ^[^:]+:[^\\\\!*] /etc/shadow | cut -d: -f1,6\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "last-password-change-date-in-past"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure all users last password change date is in the past"
    description: "All users should have a password change date in the past."
    rationale:
      "If a users recorded password change date is in the future then they could\n"
      "bypass any set password expiration."
    remediation:
      "Investigate any users with a password change date in the future and correct\n"
      "them. Locking the account, expiring the password, or resetting the password\n"
      "manually may be appropriate."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/shadow\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:.*:.*:.*:.*:.*:.*:.*\""
      "        expected_regex: \".*:.*:(\\\\d+):.*:.*:.*:.*:.*:.*\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: GREATER_THAN"
      "          today: {}"
      "        }"
      "      }"
      "    }"
      "    non_compliance_msg: \"there are users whose last password change is in the future\""
      "    file_display_command: \"for usr in $(cut -d: -f1 /etc/shadow); do [[ $(chage --list $usr | grep '^Last password change' | cut -d: -f2) > $(date) ]] && echo \\\"$usr :$(chage --list $usr | grep '^Last password change' | cut -d: -f2)\\\"; done\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "default-group-for-root-account-is-gid-0"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure default group for the root account is GID 0"
    description:
      "The usermod command can be used to specify which group the root user belongs\n"
      "to. This affects permissions of files that are created by the root user."
    rationale:
      "Using GID 0 for the root account helps prevent root -owned files from\n"
      "accidentally becoming accessible to non-privileged users."
    remediation:
      "Run the following command to set the root user default group to GID 0:\n"
      "```\n"
      "# usermod -g 0 root\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"root:.*:.*:.*:.*:.*:.*\""
      "        expected_regex: \"root:.*:.*:0:.*:.*:.*\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "root-login-restricted-to-system-console"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure root login is restricted to system console"
    description:
      "The file /etc/securetty contains a list of valid terminals that may be logged\n"
      "in directly as root."
    rationale:
      "Since the system console has special properties to handle emergency\n"
      "situations, it is important to ensure that the console is in a physically\n"
      "secure location and that unauthorized consoles have not been defined."
    remediation: "Remove entries for any consoles that are not in a physically secure location."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/securetty\"}}"
      "    existence:{should_exist:false}"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "access-to-su-restricted"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure access to the su command is restricted"
    description:
      "The su command allows a user to run a command or shell as another user. The\n"
      "program has been superseded by sudo , which allows for more granular control\n"
      "over privileged access. Normally, the su command can be executed by any user.\n"
      "By uncommenting the pam_wheel.so statement in /etc/pam.d/su , the su command\n"
      "will only allow users in the wheel group to execute su."
    rationale:
      "Restricting the use of su , and using sudo in its place, provides system\n"
      "administrators better control of the escalation of user privileges to execute\n"
      "privileged commands. The sudo utility also provides a better logging and audit\n"
      "mechanism, as it can log each command executed via sudo, whereas su can only\n"
      "record that a user executed the su program."
    remediation:
      "Add the following line to the /etc/pam.d/su file:\n"
      "```\n"
      "auth required pam_wheel.so use_uid\n"
      "```\n"
      "Create a comma separated list of users in the wheel statement in the "
      "/etc/group file:\n"
      "```\n"
      "wheel:!:10:root,<user list>\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/pam.d/su\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"auth.*\\\\spam_wheel.so\\\\s.*\""
      "        expected_regex: \"auth\\\\s*required\\\\s*pam_wheel.so\\\\s*use_uid\""
      "      }"
      "    }"
      "  }"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \"wheel:.*\""
      "        expected_regex: \"wheel:.*:.*:root\""
      "      }"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "etc-passwd-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/passwd are configured"
    description:
      "The /etc/passwd file contains user account information that is used by many\n"
      "system utilities and therefore must be readable for these utilities to\n"
      "operate."
    rationale:
      "It is critical to ensure that the /etc/passwd file is protected from\n"
      "unauthorized write access. Although it is protected by default, the file\n"
      "permissions could be changed either inadvertently or through malicious\n"
      "actions."
    remediation:
      "Run the following command to set permissions on /etc/passwd:\n"
      "```\n"
      "# chown root:root /etc/passwd\n"
      "# chmod 644 /etc/passwd\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    permission:{"
      "      set_bits: 0444"
      "      clear_bits: 0133"
      "      bits_should_match: BOTH_SET_AND_CLEAR"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "etc-shadow-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/shadow are configured"
    description:
      "The /etc/shadow file is used to store the information about user accounts that\n"
      "is critical to the security of those accounts, such as the hashed password and\n"
      "other security information."
    rationale:
      "If attackers can gain read access to the /etc/shadow file, they can easily run\n"
      "a password cracking program against the hashed password to break it. Other\n"
      "security information that is stored in the /etc/shadow file (such as\n"
      "expiration) could also be useful to subvert the user accounts."
    remediation:
      "Run the one of the following chown commands as appropriate and the chmod to\n"
      "set permissions on /etc/shadow:\n"
      "```\n"
      "# chown root:root /etc/shadow\n"
      "# chmod o-rwx,g-wx /etc/shadow\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/shadow\"}}"
      "    permission:{"
      "      clear_bits: 0137"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/shadow\"}}"
      "    permission:{"
      "      clear_bits: 0137"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"shadow\" should_own: true}"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "etc-group-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/group are configured"
    description:
      "The /etc/group file contains a list of all the valid groups defined in the\n"
      "system. The command below allows read/write access for root and read access\n"
      "for everyone else."
    rationale:
      "The /etc/group file needs to be protected from unauthorized changes by non\n"
      "privileged users, but needs to be readable as this information is used with\n"
      "many non-privileged programs."
    remediation:
      "Run the following command to set permissions on /etc/group:\n"
      "```\n"
      "# chown root:root /etc/group\n"
      "# chmod 644 /etc/group\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    permission:{"
      "      set_bits: 0444"
      "      clear_bits: 0133"
      "      bits_should_match: BOTH_SET_AND_CLEAR"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "etc-gshadow-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/gshadow are configured"
    description:
      "The /etc/gshadow file is used to store the information about groups that is\n"
      "critical to the security of those accounts, such as the hashed password and\n"
      "other security information."
    rationale:
      "If attackers can gain read access to the /etc/gshadow file, they can easily\n"
      "run a password cracking program against the hashed password to break it. Other\n"
      "security information that is stored in the /etc/gshadow file (such as group\n"
      "administrators) could also be useful to subvert the group."
    remediation:
      "Run the one of the following chown commands as appropriate and the chmod to\n"
      "set permissions on /etc/gshadow:\n"
      "```\n"
      "# chown root:root /etc/gshadow\n"
      "# chown root:shadow /etc/gshadow\n"
      "# chmod o-rwx,g-rw /etc/gshadow\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/gshadow\"}}"
      "    existence:{should_exist:false}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/gshadow\"}}"
      "    permission:{"
      "      clear_bits: 0137"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/gshadow\"}}"
      "    permission:{"
      "      clear_bits: 0137"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"shadow\" should_own: true}"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "etc-group-dash-permissions"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure permissions on /etc/group- are configured"
    description:
      "The /etc/group- file contains a backup list of all the valid groups defined in\n"
      "the system."
    rationale:
      "It is critical to ensure that the /etc/group- file is protected from\n"
      "unauthorized access. Although it is protected by default, the file permissions\n"
      "could be changed either inadvertently or through malicious actions."
    remediation:
      "Run the following command to set permissions on /etc/group-:\n"
      "```\n"
      "# chown root:root /etc/group-\n"
      "# chmod u-x,go-wx /etc/group-\n"
      "```\n"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group-\"}}"
      "    existence:{should_exist: false}"
      "  }"
      "}"
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group-\"}}"
      "    permission:{"
      "      clear_bits: 0133"
      "      user: {name: \"root\" should_own: true}"
      "      group: {name: \"root\" should_own: true}"
      "    }"
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "password-fields-not-empty"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure password fields are not empty"
    description:
      "An account with an empty password field means that anybody may log in as that\n"
      "user without providing a password."
    rationale:
      "All accounts must have passwords or be locked to prevent the account from\n"
      "being used by an unauthorized user."
    remediation:
      "If any accounts in the /etc/shadow file do not have a password, run the\n"
      "following command to lock the account until it can be determined why it does\n"
      "not have a password:\n"
      "```\n"
      "# passwd -l <username>\n"
      "```\n"
      "Also, check to see if the account is logged in and investigate what it is\n"
      "being used for to determine if it needs to be forced off."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/shadow\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:.*:.*:.*:.*:.*:.*:.*\""
      "        expected_regex: \".*:.+:.*:.*:.*:.*:.*:.*:.*\""
      "      }"
      "    }"
      "    non_compliance_msg: \"there are empty password fields in /etc/shadow\""
      "    file_display_command: \"awk -F: '($2 == \\\"\\\" ) { print $1 \\\" does not have a password \\\"}' /etc/shadow\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "passwd-no-legacy-plus-entries"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no legacy \"+\" entries exist in /etc/passwd"
    description:
      "The character + in various files used to be markers for systems to insert data\n"
      "from NIS maps at a certain point in a system configuration file. These entries\n"
      "are no longer required on most systems, but may exist in files that have been\n"
      "imported from other platforms."
    rationale:
      "These entries may provide an avenue for attackers to gain privileged access on\n"
      "the system."
    remediation: "Remove any legacy '+' entries from /etc/passwd if they exist."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"\\\\+:.*\""
      "        expected_regex: \"\\\\+:.*\""
      "      }"
      "    }"
      "    non_compliance_msg: \"there are legacy '+' entries in /etc/passwd\""
      "    file_display_command: \"grep '^\\\\+:' /etc/passwd\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "shadow-no-legacy-plus-entries"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no legacy \"+\" entries exist in /etc/shadow"
    description:
      "The character + in various files used to be markers for systems to insert data\n"
      "from NIS maps at a certain point in a system configuration file. These entries\n"
      "are no longer required on most systems, but may exist in files that have been\n"
      "imported from other platforms."
    rationale: "These entries may provide an avenue for attackers to gain privileged access on the system."
    remediation: "Remove any legacy '+' entries from /etc/shadow if they exist."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/shadow\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"\\\\+:.*\""
      "        expected_regex: \"\\\\+:.*\""
      "      }"
      "    }"
      "    non_compliance_msg: \"there are legacy '+' entries in /etc/shadow\""
      "    file_display_command: \"grep '^\\\\+:' /etc/shadow\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "group-no-legacy-plus-entries"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no legacy \"+\" entries exist in /etc/group"
    description:
      "The character + in various files used to be markers for systems to insert data\n"
      "from NIS maps at a certain point in a system configuration file. These entries\n"
      "are no longer required on most systems, but may exist in files that have been\n"
      "imported from other platforms."
    rationale:
      "These entries may provide an avenue for attackers to gain privileged access on\n"
      "the system."
    remediation: "Remove any legacy '+' entries from /etc/group if they exist."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"\\\\+:.*\""
      "        expected_regex: \"\\\\+:.*\""
      "      }"
      "    }"
      "    non_compliance_msg: \"there are legacy '+' entries in /etc/group\""
      "    file_display_command: \"grep '^\\\\+:' /etc/group\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "root-is-only-uid-0-account"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure root is the only UID 0 account"
    description: "Any account with UID 0 has superuser privileges on the system."
    rationale:
      "This access must be limited to only the default root account and only from the\n"
      "system console. Administrative access must be through an unprivileged account\n"
      "using an approved mechanism as noted in Item 5.6 Ensure access to the su\n"
      "command is restricted."
    remediation: "Remove any users other than root with UID 0 or assign them a new UID if appropriate"
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:0:.*:.*:.*:.*\""
      "        expected_regex: \"root:.*:0:.*:.*:.*:.*\""
      "      }"
      "    }"
      "    non_compliance_msg: \"there's a non-root user with uid 0 in /etc/passwd\""
      "    file_display_command: \"awk -F: '($3 == 0) { print $1 }' /etc/passwd\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "no-duplicate-uids"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no duplicate UIDs exist"
    description:
      "Although the useradd program will not let you create a duplicate User ID\n"
      "UID), it is possible for an administrator to manually edit the /etc/passwd\n"
      "file and change the UID field."
    rationale:
      "Users must be assigned unique UIDs for accountability and to ensure\n"
      "appropriate access protections."
    remediation:
      "Based on the results of the audit script, establish unique UIDs and review all\n"
      "files owned by the shared UIDs to determine which UID they are supposed to\n"
      "belong to."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:.*:.*:.*:.*:.*\""
      "        expected_regex: \".*:.*:(\\\\d+):.*:.*:.*:.*\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: UNIQUE"
      "        }"
      "      }"
      "    }"
      "    non_compliance_msg: \"there are duplicate UIDs\""
      "    file_display_command: \"#!/bin/bash\\ncut -f3 -d\\\":\\\" /etc/passwd | sort -n | uniq -c | while read x ; do\\n  [ -z \\\"$x\\\" ] && break\\n  set - $x\\n  if [ $1 -gt 1 ]; then\\n    users=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs)\\n    echo \\\"Duplicate UID ($2): $users\\\"\\n  fi\\ndone\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "no-duplicate-gids"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no duplicate GIDs exist"
    description:
      "Although the groupadd program will not let you create a duplicate Group ID\n"
      "GID), it is possible for an administrator to manually edit the /etc/group file\n"
      "and change the GID field."
    rationale: "User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections."
    remediation:
      "Based on the results of the audit script, establish unique GIDs and review all\n"
      "files owned by the shared GID to determine which group they are supposed to\n"
      "belong to."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:.*:.*\""
      "        expected_regex: \".*:.*:(\\\\d+):.*\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: UNIQUE"
      "        }"
      "      }"
      "    }"
      "    non_compliance_msg: \"there are duplicate GIDs\""
      "    file_display_command: \"#!/bin/bash\\ncut -f3 -d\\\":\\\" /etc/group | sort -n | uniq -c | while read x ; do\\n  [ -z \\\"$x\\\" ] && break\\n  set - $x\\n  if [ $1 -gt 1 ]; then\\n    groups=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/group | xargs)\\n    echo \\\"Duplicate GID ($2): $groups\\\"\\n  fi\\ndone\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "no-duplicate-user-names"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no duplicate user names exist"
    description:
      "Although the useradd program will not let you create a duplicate user name, it\n"
      "is possible for an administrator to manually edit the /etc/passwd file and\n"
      "change the user name."
    rationale:
      "If a user is assigned a duplicate user name, it will create and have access to\n"
      "files with the first UID for that username in /etc/passwd . For example, if\n"
      "\"test4\" has a UID of 1000 and a subsequent \"test4\" entry has a UID of 2000\n"
      "logging in as \"test4\" will use UID 1000. Effectively the UID is shared which\n"
      "is a security problem."
    remediation:
      "Based on the results of the audit script, establish unique user names for the\n"
      "users. File ownerships will automatically reflect the change as long as the\n"
      "users have unique UIDs."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/passwd\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:.*:.*:.*:.*:.*\""
      "        expected_regex: \"(.*):.*:.*:.*:.*:.*:.*\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: UNIQUE"
      "        }"
      "      }"
      "    }"
      "    non_compliance_msg: \"there are duplicate user names\""
      "    file_display_command: \"#!/bin/bash\\ncut -f1 -d\\\":\\\" /etc/passwd | sort -n | uniq -c | while read x ; do\\n  [ -z \\\"$x\\\" ] && break\\n  set - $x\\n  if [ $1 -gt 1 ]; then\\n    uids=$(awk -F: '($1 == n) { print $3 }' n=$2 /etc/passwd | xargs)\\n    echo \\\"Duplicate User Name ($2): $uids\\\"\\n  fi\\ndone\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "no-duplicate-group-names"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure no duplicate group names exist"
    description:
      "Although the groupadd program will not let you create a duplicate group name,\n"
      "it is possible for an administrator to manually edit the /etc/group file and\n"
      "change the group name."
    rationale:
      "If a group is assigned a duplicate group name, it will create and have access\n"
      "to files with the first GID for that group in /etc/group . Effectively, the\n"
      "GID is shared, which is a security problem."
    remediation:
      "Based on the results of the audit script, establish unique names for the user\n"
      "groups. File group ownerships will automatically reflect the change as long as\n"
      "the groups have unique GIDs."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    content_entry:{"
      "      match_type: ALL_MATCH_ANY_ORDER"
      "      match_criteria: {"
      "        filter_regex: \".*:.*:.*:.*\""
      "        expected_regex: \"(.*):.*:.*:.*\""
      "        group_criteria: {"
      "          group_index: 1"
      "          type: UNIQUE"
      "        }"
      "      }"
      "    }"
      "    non_compliance_msg: \"there are duplicate group names\""
      "    file_display_command: \"#!/bin/bash\\ncut -f1 -d\\\":\\\" /etc/group | sort -n | uniq -c | while read x ; do\\n  [ -z \\\"$x\\\" ] && break\\n  set - $x\\n  if [ $1 -gt 1 ]; then\\n    gids=$(gawk -F: '($1 == n) { print $3 }' n=$2 /etc/group | xargs)\\n    echo \\\"Duplicate Group Name ($2): $gids\\\"\\n  fi\\ndone\""
      "  }"
      "}"
  }
}
benchmark_configs: {
  id: "shadow-group-empty"
  compliance_note: {
    version: { cpe_uri: "cpe:/o:cos:cos_linux:89" version: "1.0.0" }
    title: "Ensure shadow group is empty"
    description:
      "The shadow group allows system programs which require access the ability to\n"
      "read the /etc/shadow file. No users should be assigned to the shadow group."
    rationale:
      "Any users assigned to the shadow group would be granted read access to the\n"
      "etc/shadow file. If attackers can gain read access to the /etc/shadow file,\n"
      "they can easily run a password cracking program against the hashed passwords\n"
      "to break them. Other security information that is stored in the /etc/shadow\n"
      "file (such as expiration) could also be useful to subvert additional user\n"
      "accounts."
    remediation:
      "Remove all users from the shadow group, and change the primary group of any\n"
      "users with shadow as their primary group."
    cis_benchmark: {
      profile_level: 1
      severity: LOW
    }
    scan_instructions:
      "check_alternatives:{"
      "  file_checks:{"
      "    files_to_check:{single_file:{path:\"/etc/group\"}}"
      "    content_entry:{"
      "      match_type: NONE_MATCH"
      "      match_criteria: {"
      "        filter_regex: \"shadow:[^:]*:[^:]*:[^:]+\""
      "        expected_regex: \"shadow:[^:]*:[^:]*:[^:]+\""
      "      }"
      "    }"
      "    non_compliance_msg: \"a shadow group exists in /etc/group\""
      "    file_display_command: \"grep ^shadow:[^:]*:[^:]*:[^:]+ /etc/group\""
      "  }"
      "}"
  }
}
